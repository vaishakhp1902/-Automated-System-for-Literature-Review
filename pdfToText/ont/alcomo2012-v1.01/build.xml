<project name="Alcomo2012" default="dist" basedir=".">

<description>Applying logical constraints to ontology matching (2012 version)</description>

<!-- set global properties for this build -->
<property name="src" location="src"/>
<property name="build" location="build"/>
<property name="dist" location="dist"/>
<property name="lib" location="lib"/>
<property name="ex" location="testdata"/>

<path id="libraries.path">
	<!-- HERMIT --> 
	<pathelement location="${lib}/hermit-v136-libs/axiom-1.2.8.jar"/>
	<pathelement location="${lib}/hermit-v136-libs/dk.brics.automaton-1.11-2.jar"/>
	<pathelement location="${lib}/hermit-v136-libs/jautomata-core-2.0-alpha-1.jar"/>
	<pathelement location="${lib}/hermit-v136-libs/junit-4.4.jar"/>
	<pathelement location="${lib}/hermitv136/HermiT.jar"/>
	<!-- PELLET --> 
	<pathelement location="${lib}/pelletv230/aterm-java-1.6.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-cli.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-core.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-datatypes.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-dig.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-el.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-explanation.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-jena.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-modularity.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-owlapiv3.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-pellint.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-query.jar"/>
	<pathelement location="${lib}/pelletv230/pellet-rules.jar"/>
	<pathelement location="${lib}/pelletv230/servlet.jar"/>
	<pathelement location="${lib}/pelletv230-libs/jgrapht-jdk1.5.jar"/>
	<!-- OWL_API --> 
	<pathelement location="${lib}/owlapiv322/owlapi-3.2.2.jar"/>
	<!-- LOG4J --> 
	<pathelement location="${lib}/log4j1216/log4j-1.2.16.jar"/>
</path>
	
<pathconvert property="manifest.classpath" pathsep=" ">
  <path refid="libraries.path"/>
  <mapper>
    <chainedmapper>
       <flattenmapper/>
       <globmapper from="*.jar" to="lib/*.jar"/>
    </chainedmapper>
  </mapper>
</pathconvert>

	
	
<target name="init">
	<!-- Create the time stamp -->
	<tstamp/>
	<!-- Create the build directory structure used by compile -->
	<mkdir dir="${build}"/>
</target>

<target name="compile" depends="init" description="compile the source " >
	<javac includeantruntime="false" srcdir="${src}" destdir="${build}">
		<exclude name="de/unima/alcomox/thesis/**"/>
		<exclude name="de/unima/alcomox/experiments/**"/>
		<exclude name="de/unima/alcomox/examples/**"/>
		<!-- <exclude name="de/unima/alcomox/mapping/**"/>  -->
		<classpath>
			<path refid="libraries.path"/>
		</classpath>
	</javac>
</target>

<target name="dist" depends="compile" description="generate the distribution" >
	<!-- Create the distribution directory and its subfolders -->
	<mkdir dir="${dist}"/>
	<mkdir dir="${dist}/lib"/>
	<mkdir dir="${dist}/doc"/>
	<mkdir dir="${dist}/testdata"/>
	<mkdir dir="${dist}/testdata/conference"/>
	<mkdir dir="${dist}/testdata/anatomy"/>
	<!-- put everything together -->
	<jar jarfile="${dist}/alcomo.jar" basedir="${build}">
		<manifest>
			<attribute name="Class-Path" value="${manifest.classpath}"/>
		</manifest>
    </jar>	
	<!-- copy required libraries -->
	<copy todir="${dist}/lib">
		<fileset dir="${lib}/pelletv230">
			<exclude name=".svn"/>
		</fileset>
	</copy>
	<copy file="${lib}/pelletv230-libs/jgrapht-jdk1.5.jar" tofile="${dist}/lib/jgrapht-jdk1.5.jar"/>
	<copy file="${lib}/hermitv136/HermiT.jar" tofile="${dist}/lib/HermiT.jar"/>
	<copy todir="${dist}/lib">
		<fileset dir="${lib}/hermit-v136-libs">
			<exclude name=".svn"/>
		</fileset>
	</copy>
	<copy file="${lib}/log4j1216/log4j-1.2.16.jar" tofile="${dist}/lib/log4j-1.2.16.jar"/>
	<copy file="${lib}/owlapiv322/owlapi-3.2.2.jar" tofile="${dist}/lib/owlapi-3.2.2.jar"/>
	<!-- copy required examples -->
	<copy todir="${dist}/testdata/conference">
		<fileset dir="${ex}/conference">
			<exclude name=".svn"/>
		</fileset>
	</copy>
	<copy todir="${dist}/testdata/anatomy">
		<fileset dir="${ex}/anatomy">
			<exclude name=".svn"/>
		</fileset>
	</copy>
</target>


<target name="javadoc" description="generate the javadoc" >
	<javadoc destdir="${dist}/doc" author="true" version="true" use="true" windowtitle="ALCOMO 2012 Documentation">
		<fileset dir="src">
			<exclude name="de/unima/alcomox/thesis/**"/>
			<exclude name="de/unima/alcomox/examples/**"/>
			<exclude name="de/unima/alcomox/experiments/**"/>
		</fileset>
		<classpath>
			<path refid="libraries.path"/>
		</classpath>
	</javadoc>
</target>

<target name="clean" description="clean up" >
	<delete dir="${build}"/>
	<delete dir="${dist}"/>
</target>

<target name="cep" description="copies the all required things to have an eclipse project">
	<copy todir="${dist}/eclipseproject/src">
		<fileset dir="src/" casesensitive="yes">
			<include name="**/*.java"/>
			<exclude name="**/examples/**"/>
			<exclude name="**/test/**"/>
			<exclude name=".svn"/>
		</fileset>
	</copy>
	<copy todir="${dist}/eclipseproject/lib">
		<fileset dir="lib/" casesensitive="yes">
			<include name="**/*.jar"/>
			<exclude name=".svn"/>
		</fileset>
	</copy>
	<copy todir="${dist}/eclipseproject/testdata/conference">
		<fileset dir="testdata/conference" casesensitive="yes"/>
	</copy>
		<copy todir="${dist}/eclipseproject/testdata/anatomy">
		<fileset dir="testdata/anatomy" casesensitive="yes"/>
	</copy>
	<copy file=".classpath" tofile="${dist}/eclipseproject/.classpath"/>
	<copy file=".project" tofile="${dist}/eclipseproject/.project"/>
	<copy file="build.xml" tofile="${dist}/eclipseproject/build.xml"/>
	<copy file="log4j.properties" tofile="${dist}/eclipseproject/log4j.properties"/>
</target>

</project>
